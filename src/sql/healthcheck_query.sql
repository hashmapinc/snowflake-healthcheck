USE ROLE ACCOUNTADMIN; 

-- Also select the warehouse you want to use for this. An X-SMALL is just fine for most people.

WITH

WAREHOUSE_HEALTH AS (
  SELECT
    WAREHOUSE_ID || ' - ' || WAREHOUSE_NAME || ' - ' || WAREHOUSE_SIZE AS WAREHOUSE,
    MEDIAN(EXECUTION_TIME)/1000/60                                     AS MEDIAN_EXECUTION_TIME_MINUTES,
    MEDIAN(QUEUED_PROVISIONING_TIME)/1000/60                           AS MEDIAN_QUEUED_PROVISIONING_TIME_MINUTES,
    MEDIAN(QUEUED_OVERLOAD_TIME)/1000/60                               AS MEDIAN_QUEUED_OVERLOAD_TIME_MINUTES
      
  FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
      
  WHERE WAREHOUSE IS NOT NULL 
    AND END_TIME > DATEADD(DAY, -30, CURRENT_TIMESTAMP )

  GROUP BY WAREHOUSE
),

WAREHOUSE_HEALTH_JSON AS (
  SELECT 
    OBJECT_INSERT(
      OBJECT_CONSTRUCT('type','warehouse_health'),
      'data', OBJECT_CONSTRUCT(*)
    )::STRING AS HEALTHCHECK_V1

  FROM WAREHOUSE_HEALTH
),

WAREHOUSE_USAGE AS (
  SELECT 
    SUM(CREDITS_USED_COMPUTE)               AS COMPUTE_CREDITS,
    START_TIME::DATE                        AS DATE,
    WAREHOUSE_ID || ' - ' || WAREHOUSE_NAME AS WAREHOUSE 
    
  FROM 
    SNOWFLAKE.ACCOUNT_USAGE.WAREHOUSE_METERING_HISTORY
    
  WHERE
    DATE > DATEADD(DAY, -30, CURRENT_TIMESTAMP )

  GROUP BY WAREHOUSE, DATE
),

WAREHOUSE_USAGE_JSON AS (
  SELECT 
    OBJECT_INSERT(
      OBJECT_CONSTRUCT('type','warehouse_usage'),
      'data', OBJECT_CONSTRUCT(*)
    )::STRING AS HEALTHCHECK_V1

  FROM WAREHOUSE_USAGE

),

DATABASE_USAGE AS (
  SELECT 
    AVERAGE_DATABASE_BYTES/1024/1024/1024 AS AVERAGE_DAILY_USAGE_GIGABYTES,
    USAGE_DATE::DATE                      AS DATE,
    DATABASE_ID || ' - ' || DATABASE_NAME AS DATABASE 
    
  FROM 
    SNOWFLAKE.ACCOUNT_USAGE.DATABASE_STORAGE_USAGE_HISTORY
    
  WHERE
    DATE > DATEADD(DAY, -30, CURRENT_TIMESTAMP )
    AND DELETED IS NULL
),

DATABASE_USAGE_JSON AS (
  SELECT 
    OBJECT_INSERT(
      OBJECT_CONSTRUCT('type','database_usage'),
      'data', OBJECT_CONSTRUCT(*)
    )::STRING AS HEALTHCHECK_V1

  FROM DATABASE_USAGE
),

TABLE_ACTIVE_STORAGE AS (
  SELECT
    TABLE_SCHEMA || ' - ' || TABLE_NAME AS TABLE_NAME,
    TABLE_CATALOG                       AS DATABASE_NAME,
    ACTIVE_BYTES/1024/1024/1024         AS ACTIVE_STORAGE_GIGABYTES
  
  FROM 
      SNOWFLAKE.ACCOUNT_USAGE.TABLE_STORAGE_METRICS
  
  WHERE
      ACTIVE_STORAGE_GIGABYTES != 0 
      AND DELETED = FALSE
  
  ORDER BY
      ACTIVE_STORAGE_GIGABYTES DESC
),

TABLE_ACTIVE_STORAGE_JSON AS (
  SELECT
    OBJECT_INSERT(
      OBJECT_CONSTRUCT('type','table_active_storage'),
      'data', OBJECT_CONSTRUCT(*)
    )::STRING AS HEALTHCHECK_V1
  
  FROM TABLE_ACTIVE_STORAGE
)

SELECT HEALTHCHECK_V1 FROM WAREHOUSE_HEALTH_JSON
UNION ALL
SELECT HEALTHCHECK_V1 FROM WAREHOUSE_USAGE_JSON
UNION ALL
SELECT HEALTHCHECK_V1 FROM DATABASE_USAGE_JSON
UNION ALL
SELECT HEALTHCHECK_V1 FROM TABLE_ACTIVE_STORAGE_JSON;